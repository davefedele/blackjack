// Generated by CoffeeScript 1.8.0
chai.should();

describe('deck', function() {
  var deck, hand;
  deck = null;
  hand = null;
  beforeEach(function() {
    return deck = new Deck();
  });
  describe('hit', function() {
    return it('should give the last card from the deck', function() {
      hand = deck.dealPlayer();
      deck.length.should.equal(50);
      deck.last().should.equal(hand.hit());
      return deck.length.should.equal(49);
    });
  });
  describe('playerHit', function() {
    it('should give a new card', function() {
      hand = deck.dealPlayer();
      hand.playerHit();
      return hand.models.length.should.equal(3);
    });
    return it('should trigger a bust if hit score exceeds 21', function() {
      hand = deck.dealPlayer();
      hand.hit();
      hand.hit();
      return hand.should.trigger('bust');
    });
  });
  describe('dealerHit', function() {
    it('should hit if the dealer\s score is below 17', function() {
      hand = deck.dealDealer();
      while (hand.correctScore() < 17) {
        hand.dealerHit();
      }
      return hand.correctScore().should.to.be.above(16);
    });
    return it('should trigger a stop event when done hitting', function() {
      hand = deck.dealDealer();
      while (hand.correctScore() < 17) {
        hand.dealerHit();
      }
      if (hand.correctScore() >= 17) {
        return hand.should.trigger('stop');
      }
    });
  });
  describe('stand', function() {
    it('should trigger a stand event', function() {
      hand = deck.dealPlayer();
      hand.stand;
      return hand.should.trigger('stand');
    });
    it('should flip the dealer\'s hidden card', function() {
      var dealer;
      dealer = deck.dealDealer();
      dealer.stand();
      return dealer.at(0).get('revealed').should.equal(true);
    });
    return it('should start the dealer\s turn', function() {
      var dealer;
      dealer = deck.dealDealer();
      dealer.stand();
      return dealer.models.length.should.be.above(0);
    });
  });
  return describe('correctScore', function() {
    it('should give the score of the dealer\'s hand with a hidden card', function() {});
    it('should give the score of the dealer\'s hand with a revealed card', function() {});
    it('should give the score of the dealer\'s hand that has an ace', function() {});
    it('should give the score of the player\'s hand', function() {});
    return it('should give the score of the player\'s hand that has an ace', function() {});
  });
});
